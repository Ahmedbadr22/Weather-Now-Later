name: Lint, Test & Build Debug

on:
  push:
    branches:
      - master
      - development/ci-cd/init
  pull_request:
    branches:
      - master
    tags:
      - 'v*'

jobs:
  android-ci:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Print Java Version
        run: javac -version

      - name: Change Wrapper Permissions
        run: chmod +x ./gradlew

      - name: Cache Gradle dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Run Android Lint
        run: ./gradlew lintDebug

      - name: Run Unit Tests
        run: ./gradlew testDebugUnitTest

      - name: Upload Unit Test Reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: unit-test-report
          path: '**/build/reports/tests/testDebugUnitTest/**'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      # ✅ Install system image & emulator
      - name: Install Emulator & System Image
        run: |
          yes | ${ANDROID_HOME}/cmdline-tools/latest/bin/sdkmanager "platforms;android-31" "platform-tools" "emulator" "system-images;android-31;google_apis;x86_64"

      - name: Accept Licenses
        run: yes | ${ANDROID_HOME}/cmdline-tools/latest/bin/sdkmanager --licenses

      # ✅ Create emulator
      - name: Create AVD
        run: |
          ${ANDROID_HOME}/cmdline-tools/latest/bin/avdmanager create avd -n test -k "system-images;android-31;google_apis;x86_64" --force

      # ✅ Start emulator
      - name: Start Emulator
        run: |
          $ANDROID_HOME/emulator/emulator -avd test -no-window -no-audio -no-boot-anim -accel off &
          adb wait-for-device
          adb shell settings put global window_animation_scale 0
          adb shell settings put global transition_animation_scale 0
          adb shell settings put global animator_duration_scale 0
          adb shell input keyevent 82 &
          adb devices

      # ✅ Run Android Instrumentation Tests
      - name: Run Instrumentation Tests
        run: ./gradlew connectedDebugAndroidTest

      # ✅ Upload report
      - name: Upload Android Test Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: android-instrumentation-report
          path: '**/build/reports/androidTests/connected/**'

      - name: Assemble Debug APK
        run: ./gradlew assembleDebug

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: debug-apk
          path: app/build/outputs/apk/debug/app-debug.apk